<?xml version="1.0" encoding="iso-8859-1"?>
<wiki_article>
  <wiki_id>35</wiki_id>
  <wiki_id_contents>937</wiki_id_contents>
  <wiki_title>Exécuter des requêtes SQL</wiki_title>
  <wiki_encoded_title>executer-des-requetes-sql</wiki_encoded_title>
  <wiki_hits>2474</wiki_hits>
  <wiki_id_cat>5</wiki_id_cat>
  <wiki_is_cat>0</wiki_is_cat>
  <wiki_defined_status>0</wiki_defined_status>
  <wiki_undefined_status></wiki_undefined_status>
  <wiki_redirect>0</wiki_redirect>
  <wiki_auth></wiki_auth>
  <wiki_cat_id>5</wiki_cat_id>
  <wiki_cat_id_parent>0</wiki_cat_id_parent>
  <wiki_cat_article_id>159</wiki_cat_article_id>
  <wiki_con_id_contents>937</wiki_con_id_contents>
  <wiki_con_id_article>35</wiki_con_id_article>
  <wiki_menu><ol class="wiki_list_1"><li><a href="#paragraph_les-requetes">Les requêtes</a><ol class="wiki_list_2"><li><a href="#paragraph_insert">INSERT</a></li><li><a href="#paragraph_update">UPDATE</a></li><li><a href="#paragraph_delete">DELETE</a></li></ol></li><li><a href="#paragraph_select">SELECT</a><ol class="wiki_list_2"><li><a href="#paragraph_selectionner-un-seul-element">Sélectionner un seul élément</a></li><li><a href="#paragraph_selectionner-une-seule-colonne">Sélectionner une seule colonne</a></li><li><a href="#paragraph_selectionner-plusieurs-colonnes">Sélectionner plusieurs colonnes</a></li><li><a href="#paragraph_select-personnalise">SELECT personnalisé</a></li></ol></li><li><a href="#paragraph_count">COUNT</a></li><li><a href="#paragraph_truncate">TRUNCATE</a></li></ol></wiki_menu>
  <wiki_activ>1</wiki_activ>
  <wiki_user_id>982</wiki_user_id>
  <wiki_user_ip>193.164.156.12</wiki_user_ip>
  <wiki_timestamp>1369987305</wiki_timestamp>
  <wiki_content>PHPBoost possède son propre système de gestion des requêtes SQL.

Il a pour but de faciliter le développement et ainsi gagner en productivité.

La classe qui regroupe les différentes fonctions se nomme DBQuerier.

On peut accéder à son objet avec :

[code=php]PersistenceContext::get_querier()[/code]


-- Les requêtes --

--- INSERT ---

Fonction : [code=php,0,1]InjectQueryResult insert($table_name, array $columns)[/code]

Pour insérer un élément en base de donnée, exécuter la commande suivante :

[code=php]PersistenceContext::get_querier()-&gt;insert('la_table_en_question', array(
	'colonne_1' =&gt; 'valeur_1', 
	'colonne_2' =&gt; 'valeur_2'
));[/code]

Il suffit de renseigner le nom de la table et de fournir un tableau avec pour chaque élément une clé qui correspond au nom de la colonne et une valeur à lui attribuer.

Les caractères spéciaux sont échappés automatiquement, vous n'avez donc pas à le faire manuellement.

Le dernier id inséré peut être récupéré grâce à la fonction [i]get_last_inserted_id()[/i] :

[code=php]$result = PersistenceContext::get_querier()-&gt;insert('la_table_en_question', array(
	'colonne_1' =&gt; 'valeur_1', 
	'colonne_2' =&gt; 'valeur_2'
));
$inserted_id = $result-&gt;get_last_inserted_id();
[/code]

--- UPDATE ---

Fonction : [code=php,0,1]InjectQueryResult update($table_name, array $columns, $condition, array $parameters = array())[/code]

Voici un exemple de mise à jour d'un élément en base de données :

[code=php]PersistenceContext::get_querier()-&gt;update('la_table_en_question', array(
	'colonne_1' =&gt; 'valeur_1', 
	'colonne_2' =&gt; 'valeur_2'
), 'WHERE id=:id', array('id' =&gt; 'identifiant à modifier'));[/code]

De la même manière que dans un insert, le deuxième argument de la fonction est un tableau avec les colonnes à modifier.

Les arguments 3 et 4 permettent de définir la condition, c'est à dire quel(s) élément(s) vous souhaitez modifier.

Le troisième argument est la condition. Dans cet exemple, [i]WHERE id=:id[/i]. Au lieu de faire de la concaténation, il vous suffit de mettre un double point suivit d'une clé. Dans notre cas c'est [i]:id[/i]. 

Le quatrième argument est un tableau contenant les valeurs de remplacement. La clé du tableau est celle que vous avez renseigné dans la condition.

Les caractères spéciaux sont également échappés automatiquement.

--- DELETE ---

Fonction : [code=php,0,1]delete($table_name, $condition, array $parameters = array())[/code]

[code=php]PersistenceContext::get_querier()-&gt;delete('la_table_en_question', 'WHERE user_id=:id', array(
	'id' =&gt; 'identifiant à supprimer'
));[/code]


-- SELECT --

--- Sélectionner un seul élément ---

Fonction : [code=php,0,1]mixed[string] select_single_row($table_name, array $columns, $condition, array $parameters = array())[/code]

[code=php]PersistenceContext::get_querier()-&gt;select_single_row('la_table_en_question', array('les_colonnes_demandées, * pour toutes les colonnes'), 'WHERE id=:id', array(
	'id' =&gt; 'identifiant à sélectionner'
));[/code]

--- Sélectionner une seule colonne ---

Fonction : [code=php,0,1]string get_column_value($table_name, $column, $condition, array $parameters = array())[/code]

[code=php]PersistenceContext::get_querier()-&gt;get_column_value('la_table_en_question', 'la_colonne_demandée', 'WHERE id=:id', array(
	'id' =&gt; 'identifiant à sélectionner'
));[/code]

--- Sélectionner plusieurs colonnes ---

Fonction : [code=php,0,1]array select_rows($table_name, array $columns, $condition = 'WHERE 1', $parameters = array())[/code]

[code=php]PersistenceContext::get_querier()-&gt;select_rows('la_table_en_question', array('les_colonnes_demandées, * pour toutes les colonnes'), 'WHERE id=:id', array(
	'id' =&gt; 'identifiant à sélectionner'
));[/code]

--- SELECT personnalisé ---

Fonction : [code=php,0,1]SelectQueryResult select($query, $parameters = array(), $fetch_mode = SelectQueryResult::FETCH_ASSOC)[/code]

[code=php]PersistenceContext::get_querier()-&gt;select('SELECT toto FROM votre_table WHERE id=:id', array(
	'id' =&gt; 'identifiant à sélectionner'
), SelectQueryResult::FETCH_ASSOC ou SelectQueryResult::FETCH_NUM);[/code]

-- COUNT --

Fonction : [code=php,0,1]int count($table_name, $condition = 'WHERE 1', $parameters = array(), $count_column = '*')[/code]

[code=php]PersistenceContext::get_querier()-&gt;count('la_table_en_question', 'WHERE id=:id', array(
	'id' =&gt; 'identifiant à compter'
));[/code]

-- TRUNCATE --

Fonction : [code=php,0,1]truncate($table_name)[/code]

[code=php]PersistenceContext::get_querier()-&gt;truncate('la_table_de_votre_module');[/code]</wiki_content>
</wiki_article>