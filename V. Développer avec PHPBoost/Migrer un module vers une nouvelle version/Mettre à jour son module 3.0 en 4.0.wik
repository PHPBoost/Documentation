<#id#>127</#id#>
<#id_contents#>901</#id_contents#>
<#title#>Mettre à jour son module 3.0 en 4.0</#title#>
<#encoded_title#>mettre-a-jour-son-module-3-0-en-4-0</#encoded_title#>
<#hits#>596</#hits#>
<#id_cat#>41</#id_cat#>
<#is_cat#>0</#is_cat#>
<#defined_status#>0</#defined_status#>
<#undefined_status#></#undefined_status#>
<#redirect#>0</#redirect#>
<#auth#></#auth#>
<#cat_id#>41</#cat_id#>
<#cat_id_parent#>5</#cat_id_parent#>
<#cat_article_id#>144</#cat_article_id#>
<#con_id_contents#>901</#con_id_contents#>
<#con_id_article#>127</#con_id_article#>
<#menu#><ol class="wiki_list_1"><li><a href="#paragraph_le-fichier-de-configuration">Le fichier de configuration</a><ol class="wiki_list_2"><li><a href="#paragraph_le-fichier-de-configuration-config-ini">Le fichier de configuration : config.ini</a></li><li><a href="#paragraph_le-fichier-de-description-desc-ini">Le fichier de description : desc.ini</a></li></ol></li><li><a href="#paragraph_creation-et-suppression-des-tables-du-module">Création et suppression des tables du module</a></li><li><a href="#paragraph_les-extensionpointprovider">Les ExtensionPointProvider</a></li><li><a href="#paragraph_changements-dans-l-api">Changements dans l'API</a><ol class="wiki_list_2"><li><a href="#paragraph_templates">Templates</a></li><li><a href="#paragraph_gestion-des-erreurs">Gestion des erreurs</a></li><li><a href="#paragraph_editeurs-de-texte">Editeurs de texte</a></li><li><a href="#paragraph_divers">Divers</a></li></ol></li></ol></#menu#>
<#activ#>1</#activ#>
<#user_id#>982</#user_id#>
<#user_ip#>193.164.156.11</#user_ip#>
<#timestamp#>1361203826</#timestamp#>
<#content#>[style=warning]Si aucun des éléments se trouvant dans cette documentation ne vous aide, référez-vous au forum et demandez de l'aide.[/style]

-- Le fichier de configuration --

Dans la version 3.0, un fichier rassemblait les différentes informations sur le module : [b]le fichier config.ini dans chaque dossier de langue[/b].

Pour être plus cohérent, nous avons [b]décidé de scinder ce fichier[/b].

--- Le fichier de configuration : config.ini ---

Le nouveau fichier de configuration va se trouver à la racine de votre module.

Dans un premier temps, veuillez le fichier config.ini pour le coller à la racine de votre module.

Veuillez renommer :

[list]
	[*] author_link en author_website
	[*] starteable_page en home_page
	[*] url_rewrite en rewrite_rules[]
[/list]

Supprimez les champs suivants : info, admin_links, name, css, cache, sql_table, com, note


--- Le fichier de description : desc.ini ---

Veuillez ensuite [b]renommer le fichier config.ini[/b] dans les dossiers de langues [b]en desc.ini[/b].

Ouvrez le fichier et gardez [b]seulement les champs name, info et admin_links[/b].

Il vous faudra ensuite [b]renommer le champ info en desc[/b].

Pour plus d'informations concernant les fichiers [i]config.ini[/i] et [i]desc.ini[/i] dans la version 4.0, référez-vous à cet article : [link=les-bases]Les bases[/link]

-- Création et suppression des tables du module --

Si vous utilisez des tables spécifiques pour votre module, vous avez un dossier nommé db à la racine.

Celui-ci centralise les fichiers SQL permettant de créer et de supprimer les tables en question lors de l'installation et la désinstallation de votre module.

Nous avons intégré un tout nouveau système permettant de gérer cela plus proprement.

Dorénavant vous allez avoir un seul et même fichier.

Veuillez créer un dossier phpboost à la racine de votre site. Vous pourrez y mettre tout ce qui est relatif à PHPBoost dans son ensemble.

Pour créer le nouveau fichier vous permettant de créer vos tables, veuillez vous reporter aux articles :

- [link=mise-en-place-du-modulesetup]Mise en place du ModuleSetup[/link].
- [link=operations-sur-la-base-de-donnees]Opérations sur la base de données[/link].
- Référez-vous au ModuleSetup d'un module existant en v4.0 pour vous aider si besoin

-- Les ExtensionPointProvider --

Dans la précédente version, il était déjà possible de communiquer entre plusieurs modules.
Cela est rendu encore plus facile et lisible sur la version 4.0 grâce à un tout nouveau système : Les ExtensionPoint.

Veuillez suivre [link=la-communication-entre-module]cet article[/link].

-- Changements dans l'API --

--- Templates ---

- Ce n'est plus la classe [code=php,0,1]Template[/code] qu'il faut instancier mais [code=php,0,1]FileTemplate[/code]
- La fonction [code=php,0,1]parse()[/code] est dépréciée, utilisez [code=php,0,1]render()[/code]
- La fonction [code=php,0,1]assign_vars()[/code] est renommée en [code=php,0,1]put_all()[/code]

--- Gestion des erreurs ---

L'utilisation de la classe [code=php,0,1]Errorh[/code] devient obsolète.
Elle est remplacée par :

- Un bon nombre d'erreurs prédéfinies dans une classe nommée [code=php,0,1]PHPBoostErrors[/code]. Pour l'utiliser, voici un exemple :

L'erreur "la page n'existe pas" est affichée de cette manière : 

[code=php]DispatchManager::redirect(PHPBoostErrors::unexisting_page());[/code]

- Pour créer une erreur personnalisée, utilisez la classe [code=php,0,1]UserErrorController[/code] :

[code=php]$controller = new UserErrorController('Titre de l\'erreur', 'Description de l\'erreur');
DispatchManager::redirect($controller);[/code]

--- Editeurs de texte ---

- [code=php,0,1]second_parse()[/code] devient [code=php,0,1]FormatingHelper::second_parse()[/code], [code=php,0,1]parse()[/code] devient [code=php,0,1]FormatingHelper::parse()[/code], [code=php,0,1]unparse()[/code] devient [code=php,0,1]FormatingHelper::unparse()[/code]
- [code=php,0,1]display_editor('nom_de_votre_textarea')[/code] devient : 

[code=php]$editor = AppContext::get_content_formatting_service()-&gt;get_default_editor();
$editor-&gt;set_identifier('nom_de_votre_textarea');
$editor-&gt;display();[/code]

--- Divers ---

- La classe utilisée dans la version 3.0 pour la pagination se nomme maintenant [code=php,0,1]DeprecatedPagination[/code]. Si vous souhaitez utiliser la nouvelle classe, référez vous à cet [link=systeme-de-pagination]article[/link].
- Pour créer une redirection, utilisez [code=php,0,1]AppContext::get_response()-&gt;redirect()[/code]
- L'utilisation de la fonction [code=php,0,1]import()[/code] n'est plus utile, les classes sont automatiquement chargées à travers l'autoload.</#content#>
