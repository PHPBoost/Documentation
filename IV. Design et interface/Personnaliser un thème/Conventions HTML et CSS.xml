<?xml version="1.0" encoding="iso-8859-1"?>
<wiki_article>
  <wiki_id>293</wiki_id>
  <wiki_id_contents>1356</wiki_id_contents>
  <wiki_title>Conventions HTML et CSS</wiki_title>
  <wiki_encoded_title>conventions-html-et-css</wiki_encoded_title>
  <wiki_hits>1034</wiki_hits>
  <wiki_id_cat>59</wiki_id_cat>
  <wiki_is_cat>0</wiki_is_cat>
  <wiki_defined_status>0</wiki_defined_status>
  <wiki_undefined_status></wiki_undefined_status>
  <wiki_redirect>0</wiki_redirect>
  <wiki_auth></wiki_auth>
  <wiki_cat_id>59</wiki_cat_id>
  <wiki_cat_id_parent>4</wiki_cat_id_parent>
  <wiki_cat_article_id>211</wiki_cat_article_id>
  <wiki_con_id_contents>1356</wiki_con_id_contents>
  <wiki_con_id_article>293</wiki_con_id_article>
  <wiki_menu><ol class="wiki_list_1"><li><a href="#paragraph_indentation">Indentation</a><ol class="wiki_list_2"><li><a href="#paragraph_un-seul-attribut">Un seul attribut</a></li><li><a href="#paragraph_plusieurs-attributs">Plusieurs attributs</a></li></ol></li><li><a href="#paragraph_les-attributs-pour-plusieurs-classes">Les attributs pour plusieurs classes</a></li><li><a href="#paragraph_les-espaces-dans-les-attributs">Les espaces dans les attributs</a></li><li><a href="#paragraph_le-nom-des-classes">Le nom des classes</a></li></ol></wiki_menu>
  <wiki_activ>1</wiki_activ>
  <wiki_user_id>1760</wiki_user_id>
  <wiki_user_ip>82.224.142.186</wiki_user_ip>
  <wiki_timestamp>1407877213</wiki_timestamp>
  <wiki_content>Il est important dans un projet que les développeurs adoptent un style d&#8217;écriture identique. Ceci favorise la relecture du code par tout le monde et facilite grandement le débogage.

Depuis l'intégration du cache CSS, il n'est plus question d'optimiser le fichier CSS pour accélérer le chargement web (le cache CSS s'en occupe), mais plutôt de gagner en lisibilité dans le développement.

Afin de simplifier le travail de tous, nous avons choisi un style similaire à l'affichage des fonctions "examiner l&#8217;élément" des navigateurs web.

Ces règles ne sont pas obligatoire, mais très fortement recommandée pour vos développements.


-- Indentation --
Le style d'indentation adopté sur PHPBoost permet de gagner en lisibilité et en clarté du code.
L'utilisation des tabulations et des espaces est très importante dans le code. Il faut aérer votre code pour le rendre plus lisible.

Nous allons voir plusieurs exemple ci-dessous.

--- Un seul attribut ---
Lorsque la classe ne possède qu'un seul attribut, nous privilégions une affichage sur une seule.
[code=css].inline { display: inline !important; }
.center { text-align: center !important; }
.left { text-align: left !important; }
.right { text-align: right !important; }
.justify { text-align: justify !important; }[/code]

--- Plusieurs attributs ---
Lorsqu'une classe possèdent un certains nombre d'attribut, nous privilégions le retour à la ligne pour chaque attribut.
[code=css]body {
	position: relative;
	min-height: 100%;
	height: auto;
	background: url(images/body.jpg) no-repeat fixed top center;
	color: #555555;
	font-size: 13px;
	font-family: "Trebuchet MS", Verdana, 'Bitstream Vera Sans', Times, serif;
}[/code]


-- Les attributs pour plusieurs classes --
Dans le cas ou nous souhaitons appliquer un attribut à plusieurs classes, nous avons deux façons de coder en fonction de l'utilisation des fonctions.

Lorsque nous avons besoin de les identifier simplement, nous utilisons un retour à la ligne : [code=css]nav.dynamic-menu li ul li a,
nav.dynamic-menu li ul li span { color: #0578CC; }[/code] On distingue bien les deux cas ou l'on applique la couleur.

Lorsque nous n'avons pas besoin d'identifier les éléments, nous n'utilisons pas de retour à la ligne : [code=css]img, table, td, blockquote, code, pre, textarea, input, video, object, .video-player { max-width: 100%; }[/code] Ce type d'écriture est privilégier dans le fichier [i]default.css[/i] qui na pas pour but d&#8217;être modifier de façon régulière.


-- Les espaces dans les attributs --
Pour faciliter les copier-coller des navigateurs, nous intégrons un espace après les ":" mais pas avant.[code=css]background: #C4CED6;[/code]De cette manière, si vous réaliser des tests avec votre navigateurs, un simple copier coller vous permet de le mettre dans votre fichier CSS.


-- Le nom des classes --
Les règles sont simples : 
[list]
	[*]Pas de majuscule
	[*]Utilisation du tiret du 6 "-"
[/list]Pour le reste, les noms restent cohérent avec la fonction d'utilisation.

La classe [i]header[/i] est faite pour l'en-tête du site, la classe [i]content[/i] pour le contenu du site.

[style=notice]Il reste encore quelques underscore "_" dans certains noms de classes, mais ils seront remplacés dans les versions futures. Ce choix permet de distinguer un nom de classe CSS et d'une variable PHP[/style]</wiki_content>
</wiki_article>