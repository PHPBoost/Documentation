<?xml version="1.0" encoding="UTF-8"?>
<articles>
  <article>
    <id>305</id>
    <id_contents>1376</id_contents>
    <title><![CDATA[Ajout d'un champ dans un module]]></title>
    <encoded_title><![CDATA[ajout-d-un-champ-dans-un-module]]></encoded_title>
    <hits>568</hits>
    <id_cat>54</id_cat>
    <is_cat>0</is_cat>
    <defined_status>0</defined_status>
    <undefined_status></undefined_status>
    <redirect>0</redirect>
    <auth></auth>
    <cat_id>54</cat_id>
    <cat_id_parent>0</cat_id_parent>
    <cat_article_id>192</cat_article_id>
    <con_id_contents>1376</con_id_contents>
    <con_id_article>305</con_id_article>
    <menu><![CDATA[<ol class="wiki_list_1"><li><a href="#paragraph_introduction">Introduction</a></li><li><a href="#paragraph_mise-en-place-du-nouveau-champ">Mise en place du nouveau champ</a><ol class="wiki_list_2"><li><a href="#paragraph_objet-principal-du-module-et-insertion-en-base-de-donnees">Objet principal du module et insertion en base de données</a></li><li><a href="#paragraph_variables-de-langue">Variables de langue</a></li><li><a href="#paragraph_formulaire">Formulaire</a></li></ol></li><li><a href="#paragraph_conclusion">Conclusion</a></li></ol>]]></menu>
    <content><![CDATA[<h1 class="wiki_paragraph1" id="paragraph_introduction">Introduction</h1><br />

Il est possible d'ajouter des champs assez simplement pour les modules en MVC (exemple : articles, news, calendrier, livre d'or), le tout n'étant évidemment pas d'ajouter uniquement une information à saisir dans le formulaire, mais également afficher cet élément à l'endroit voulu.<br />
<br />
Vous n'avez besoin d'aucune connaissance particulière en programmation, mais il va falloir être méthodique dans la procédure à suivre pour mettre en place le nouvel élément.<br />
<br />
Les ajouts peuvent être effectués avec un simple éditeur de texte (exemple : <a href="http://notepad-plus-plus.org/fr">notepad++</a>).<br />
<br />
La mise en place du nouveau champ se fait en 3 étapes : Modification de l'objet du module, ajout de variables de langue et création du champ dans le formulaire de saisie.<br />
<br />
Dans cette exemple nous nous appuierons sur le module articles, avec l'ajout d'un champ "Activer les commentaires" (pour pouvoir choisir d'afficher ou non les commentaires pour chaque article).<br />
<br />
<h1 class="wiki_paragraph1" id="paragraph_mise-en-place-du-nouveau-champ">Mise en place du nouveau champ</h1><br />

<br />
<h2 class="wiki_paragraph2" id="paragraph_objet-principal-du-module-et-insertion-en-base-de-donnees">Objet principal du module et insertion en base de données</h2><br />

Editez tout d'abord le l'objet principal du module. Dans le cas du module <strong>articles</strong>, il s'agit du fichier <em>/articles/services/Article.class.php</em>.<br />
Il faut ici créer la variable correspondant à votre nouveau champ, créer les méthodes <em>get</em> et <em>set</em> pour le récupérer et le modifier, l'ajouter à la fonction pour récupérer ou ajouter les différents paramètres, et enfin ajouter une variable dans la liste des variables envoyées au template.<br />
<br />
<span style="text-decoration: underline;">Exemple dans notre cas</span> :<br />
[[CODE=php]]
...
	private $comments_enabled;
...
	public function get_comments_enabled()
	{
		return $this-&gt;comments_enabled;
	}

	public function set_comments_enabled($enabled) 
	{
		$this-&gt;comments_enabled = $enabled;
	}
...
	public function get_properties()
	{
		return array(
			...
			'comments_enabled' =&gt; $this-&gt;get_comments_enabled(),
			...
		);
	}

	public function set_properties(array $properties)
	{
		...
		$this-&gt;set_comments_enabled($properties['comments_enabled']);
		...
	}

	/* Ajoutez ceci si vous souhaitez cocher la case ou remplir une valeur par défaut dans d'autres cas */
	public function init_default_properties($id_category = Category::ROOT_CATEGORY)
	{
		...
		$this-&gt;comments_enabled = true;
		...
	}
...
	/* Ajout d'une variable dans la liste des variables envoyées aux templates */
	public function get_tpl_vars()
	{
		...
		return array(
			...
			'C_ARTICLE_COMMENTS_ENABLED' =&gt; $this-&gt;get_comments_enabled(),
			...
		);
	}
...
[[/CODE]]<br />
Editez ensuite le fichier d'installation du module. Dans le cas du module <strong>articles</strong>, il s'agit du fichier <em>/articles/phpboost/ArticlesSetup.class.php</em>.<br />
Ajoutez votre champ dans la méthode <strong>create_table()</strong> (dans le cas du module articles : <strong>create_articles_table()</strong>) pour qu'il soit créé à l'installation. Dans certains modules on trouve également la méthode <strong>insert_data()</strong> pour l'objet créé par défaut, pensez à le mettre à jour aussi dans ce cas là.<br />
<br />
<span style="text-decoration: underline;">Exemple dans notre cas</span> :<br />
[[CODE=php]]
...
	private function create_articles_table()
	{
		$fields = array(
			...
			'comments_enabled' =&gt; array('type' =&gt; 'boolean', 'notnull' =&gt; 1, 'default' =&gt; 1),
			...
		);
		...
	}
...
	/* Ajout du paramètre pour l'article par défaut */
	private function insert_articles_data()
	{
		PersistenceContext::get_querier()-&gt;insert(self::$articles_table, array(
			...
			'comments_enabled' =&gt; true,
			...
		);
	}
...
[[/CODE]]<br />
<span class="notice">Si vous avez déjà installé le module, il va falloir ajouter le champ en base de données via une requête SQL :<br />
ALTER TABLE nom_table ADD nom_colonne type_donnees</span><br />
<span style="text-decoration: underline;">Exemple dans notre cas</span> :<br />
[[CODE=sql]]ALTER TABLE phpboost_articles ADD comments_enabled TinyInt NOT NULL DEFAULT 1;[[/CODE]]<br />
<h2 class="wiki_paragraph2" id="paragraph_variables-de-langue">Variables de langue</h2><br />

Il va falloir créer une variable de langue pour son titre dans le formulaire.<br />
Editez le fichier <em>/articles/lang/french/common.php</em> et ajoutez une variable de langue du type :<br />
[[CODE=php]]$lang['mavariable'] = 'ma variable';[[/CODE]]<br />
<span style="text-decoration: underline;">Exemple dans notre cas</span> :<br />
[[CODE=php]]
...
	$lang['articles.form.comments_enabled'] = 'Autoriser les commentaires sur l\'article';
...
[[/CODE]]<br />
Si vous souhaitez ajouter une explication sous le titre dans le formulaire, ajouter une deuxième variable :<br />
[[CODE=php]]$lang['mavariable.explain'] = 'explication de ma variable';[[/CODE]]<br />
Vous pouvez répéter l'opération pour la langue anglaise si besoin.<br />
<br />
<h2 class="wiki_paragraph2" id="paragraph_formulaire">Formulaire</h2><br />

Editez ensuite le formulaire du module. Dans le cas du module <strong>articles</strong>, il s'agit du fichier <em>/articles/controllers/ArticlesFormController.class.php</em>.<br />
Ajoutez votre champ dans la méthode <strong>build_form()</strong> pour l'afficher et dans la méthode <strong>save()</strong> pour l'enregistrer.<br />
<br />
<span style="text-decoration: underline;">Exemple dans notre cas</span> :<br />
[[CODE=php]]
...
	private function build_form(HTTPRequestCustom $request)
	{
		...
		/* Ligne 128 */
	$other_fieldset-&gt;add_field(new FormFieldCheckbox('comments_enabled', $this-&gt;lang['articles.form.comments_enabled'], $this-&gt;get_article()-&gt;get_comments_enabled()));
		...
	}
...
	private function save()
	{
		...
		/* Ligne 304 */
		$article-&gt;set_comments_enabled((bool)$this-&gt;form-&gt;get_value('comments_enabled'));
		...
	}
...
[[/CODE]]<br />
<h1 class="wiki_paragraph1" id="paragraph_conclusion">Conclusion</h1><br />

Vous pouvez maintenant afficher votre nouveau champ directement dans les templates du module.<br />
<br />
<span style="text-decoration: underline;">Exemple dans notre cas</span> : Editer le fichier <em>/articles/templates/ArticlesDisplayArticlesController.tpl</em> ou copiez le dans votre thème avant de le faire.<br />
[[CODE=tpl]]
...
	&lt;!-- Remplacez les lignes 25 à 27 par --&gt;
	# IF C_COMMENTS_ENABLED #
		# IF C_ARTICLE_COMMENTS_ENABLED #
			&amp;nbsp;|&amp;nbsp;&lt;i class="fa fa-comment" title="${LangLoader::get_message('comments', 'comments-common')}"&gt;&lt;/i&gt;&lt;a itemprop="discussionUrl" class="small" href="{U_COMMENTS}"&gt;&amp;nbsp;{L_COMMENTS}&lt;/a&gt;
		# ENDIF #
	# ENDIF #
...
	&lt;!-- Remplacez les lignes 92 à 94 par --&gt;
	# IF C_COMMENTS_ENABLED #
		# IF C_ARTICLE_COMMENTS_ENABLED #
			# INCLUDE COMMENTS #
		# ENDIF #
	# ENDIF #
...
[[/CODE]]<br />
Voilà votre champ ajouté et opérationnel.<br />
Ces différentes étapes peuvent être adaptées pour tout type de champ et pour tout module en MVC.<br />
<span class="warning">Ces modifications seront à refaire en cas de mise à jour du module en question par l'équipe.</span>]]></content>
    <activ>1</activ>
    <user_id>982</user_id>
    <user_ip>86.195.77.164</user_ip>
    <timestamp>1414747431</timestamp>
  </article>
</articles>
