<?xml version="1.0" encoding="iso-8859-1"?>
<wiki_article>
  <wiki_id>301</wiki_id>
  <wiki_id_contents>1372</wiki_id_contents>
  <wiki_title>[HomeCustom] Ajout d'élements récuperés dans la base de donnée</wiki_title>
  <wiki_encoded_title>homecustom-ajout-d-elements-recuperes-dans-la-base-de-donnee</wiki_encoded_title>
  <wiki_hits>891</wiki_hits>
  <wiki_id_cat>54</wiki_id_cat>
  <wiki_is_cat>0</wiki_is_cat>
  <wiki_defined_status>0</wiki_defined_status>
  <wiki_undefined_status></wiki_undefined_status>
  <wiki_redirect>0</wiki_redirect>
  <wiki_auth></wiki_auth>
  <wiki_cat_id>54</wiki_cat_id>
  <wiki_cat_id_parent>0</wiki_cat_id_parent>
  <wiki_cat_article_id>192</wiki_cat_article_id>
  <wiki_con_id_contents>1372</wiki_con_id_contents>
  <wiki_con_id_article>301</wiki_con_id_article>
  <wiki_menu><ol class="wiki_list_1"><li><a href="#paragraph_introduction">Introduction</a></li><li><a href="#paragraph_la-fonction-php">La fonction PHP</a><ol class="wiki_list_2"><li><a href="#paragraph_recuperer-les-donnees-de-la-base-de-donnee">Récupérer les données de la base de donnée</a></li><li><a href="#paragraph_le-traitement-des-donnees">Le traitement des données</a></li><li><a href="#paragraph_faire-appel-a-notre-nouvelle-fonction">Faire appel à notre nouvelle fonction</a></li><li><a href="#paragraph_le-code-complet">Le code complet</a></li></ol></li><li><a href="#paragraph_le-code-html">Le code HTML</a></li><li><a href="#paragraph_utilisation-des-flux">Utilisation des flux</a></li></ol></wiki_menu>
  <wiki_activ>1</wiki_activ>
  <wiki_user_id>1760</wiki_user_id>
  <wiki_user_ip>163.116.6.12</wiki_user_ip>
  <wiki_timestamp>1409052890</wiki_timestamp>
  <wiki_content>-- Introduction --

Ce tutoriel va vous expliquer comment ajouter dans votre page d'accueil des éléments provenant de la base de donnée.



-- La fonction PHP --

Nous allons prendre pour exemple la récupération d&#8217;éléments du module download.


--- Récupérer les données de la base de donnée ---

Nous allons ajouter la fonction suivante dans le fichier [i]HomeCustomHomePageExtensionPoint.class.php[/i] du répertoire [i]/HomeCustom/PHPBoost[/i].
[code=php]private function build_view()
{

}[/code]

Dans notre cas, nous allons récupérer les éléments de deux catégories.
Notre fonction [b]build_view[/b] doit contenir l&#8217;élément suivant : 
[code=php]$id_cats = array('25', '74');[/code]

Pour récupérer les données, nous devons réaliser une requête SQL : 
[code=php]$querier = PersistenceContext::get_querier();
	$results = $querier-&gt;select('SELECT file.id, file.idcat, file.title, file.short_contents, file.timestamp, file.image, 
		user.login
        FROM ' . PREFIX . 'download file
        LEFT JOIN ' . DB_TABLE_MEMBER . ' user ON user.user_id = file.user_id
        WHERE visible = 1 AND approved = 1 AND file.idcat IN (' . implode(', ', $id_cats) . ')
        ORDER BY timestamp DESC');[/code] Cette fonction permet de récupérer les éléments id, idcat, title, short_contents, timestamp, image de la table download ainsi que le login.

Une fois la base de données récupérer, nous faisons appel à une nouvelle fonction (que nous allons créer) pour traiter les données.
[code=php]$this-&gt;build_modules_view($results);[/code]


--- Le traitement des données ---

Toujours dans le fichier [i]HomeCustomHomePageExtensionPoint.class.php[/i] du répertoire [i]/HomeCustom/PHPBoost[/i] , nous allons ajouter la fonction suivante : 
[code=php]private function build_modules_view(SelectQueryResult $results)[/code]

Pour rester assez simple, nous allons séparer le chaque élement dans un fichier HTML différent.
Nous allons faire appel au fichier [i]modules.tpl[/i] que nous allons créer par la suite.
[code=php]$tpl = new FileTemplate('HomeCustom/modules.tpl');[/code]

Dans notre exemple, nous allons afficher les 3 premier élements (les 3 plus récents)
[style=notice]Pour récuperer les 3 plus anciens, il suffit de remplacer 'DESC' par 'ASC' dans la requête SQL[/style]

[code=php]foreach ($results as $row)
{
	if ($i &gt;= 3)
	{
		break; 
	}
			
	$link = new Url('/download/download' . url('.php?id=' . $row['id'], '-' . $row['id'] .  '+' . Url::encode_rewrite($row['title']) . '.php'));
	
	$tpl-&gt;assign_block_vars('item', array(
		'U_LINK' =&gt; $link-&gt;absolute(),
		'U_IMG' =&gt; Url::to_absolute($row['image']),
		'C_IMG' =&gt; !empty($row['image']),
		'TITLE' =&gt; $row['title'],
		'DESC' =&gt; $row['short_contents'],
		'PSEUDO' =&gt; $row['login']
	));
	$i++;
}[/code]
Nous allons parcourir tous les résultats ([b]foreach ($results as $row)[/b]), si on dépasse trois, on arrête ( [b]if ($i &gt;= 3) { 	break; }[/b] ). 
On créer la référence du lien pour aller sur la page du module download ( [b]$link = new Url ...[/b] )
On créer les différents élements pour l'affichage dans le code HTML avec comme nom '[b]item[/b]'

Enfin pour finaliser, on transmet toutes les donnés au tpl concerné
[code=php]$this-&gt;template-&gt;put('MODULES', $tpl);[/code]


--- Faire appel à notre nouvelle fonction ---

Bien sûr il est nécessaire de faire appel à la fonction build_view().

Ajouter dans la fonction get_view l'appel à la fonction build_view de la manière suivante : [code=php]private function get_view()
{
	$this-&gt;template = new FileTemplate('HomeCustom/home.tpl');
		
	$this-&gt;build_view();
		
	return $this-&gt;template;
}[/code]


--- Le code complet ---

[hide][code=php]&lt;?php
/*##################################################
 *                     HomeCustomHomePageExtensionPoint.class.php
 *                            -------------------
 *   begin                : August 25, 2012
 *   copyright            : (C) 2012 Kevin MASSY
 *   email                : kevin.massy@phpboost.com
 *
 *
 ###################################################
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 ###################################################*/

class HomeCustomHomePageExtensionPoint implements HomePageExtensionPoint
{
	private $template;
	
	public function get_home_page()
	{
		$columns_disabled = Environment::get_graphical_environment()-&gt;get_columns_disabled();
  		$columns_disabled-&gt;set_disable_left_columns(true);
  		$columns_disabled-&gt;set_disable_right_columns(true);
  		$columns_disabled-&gt;set_disable_top_central(true);
  		$columns_disabled-&gt;set_disable_bottom_central(true);
		return new DefaultHomePage($this-&gt;get_title(), $this-&gt;get_view());
	}

	private function get_title()
	{
		return LangLoader::get_message('title', 'common', 'HomeCustom');
	}
	
	private function get_view()
	{
		$this-&gt;template = new FileTemplate('HomeCustom/home.tpl');
		
		$this-&gt;build_view();
		
		return $this-&gt;template;
	}
	
	private function build_view()
	{
		$id_cats = array('24', '74');
		
		$querier = PersistenceContext::get_querier();
		$results = $querier-&gt;select('SELECT file.id, file.idcat, file.title, file.short_contents, file.timestamp, file.image, 
			user.login
	        FROM ' . PREFIX . 'download file
	        LEFT JOIN ' . DB_TABLE_MEMBER . ' user ON user.user_id = file.user_id
	        WHERE visible = 1 AND approved = 1 AND idcat IN (' . implode(', ', $id_cats) . ')
                ORDER BY timestamp DESC');
		
		$this-&gt;build_modules_view($results);
	}
	
	private function build_modules_view(SelectQueryResult $results)
	{
		$tpl = new FileTemplate('HomeCustom/modules.tpl');
		$i = 0;
		foreach ($results as $row)
		{
			if ($i &gt;= 3)
			{
				break; 
			}
				
			$link = new Url('/download/download' . url('.php?id=' . $row['id'], '-' . $row['id'] .  '+' . Url::encode_rewrite($row['title']) . '.php'));
			$tpl-&gt;assign_block_vars('item', array(
				'U_LINK' =&gt; $link-&gt;absolute(),
				'U_IMG' =&gt; Url::to_absolute($row['image']),
				'C_IMG' =&gt; !empty($row['image']),
				'TITLE' =&gt; $row['title'],
				'DESC' =&gt; $row['short_contents'],
				'PSEUDO' =&gt; $row['login']
			));
			$i++;
		}
		$this-&gt;template-&gt;put('MODULES', $tpl);
	}
}
?&gt;[/code][/hide]



-- Le code HTML --

Il vous suffit de créer le fichier [i]modules.tpl[/i] dans le répertoire [i]/HomeCustom/templates[/i] et d'y ajouter l'affiche que vous souhaitez avec le code CSS que vous souhaitez.
[code=tpl]# START item #
&lt;div class="votre classe CSS"&gt;
	&lt;a href="{item.U_LINK}"&gt;
		&lt;p class="lm_img_container"&gt;
			# IF item.C_IMG #
				&lt;img src="{item.U_IMG}" title="{item.TITLE}" alt="{item.TITLE}" class="votre classe CSS" /&gt;
			# ENDIF #
			&lt;/p&gt;
		&lt;/div&gt;
		&lt;p class="votre classe CSS"&gt;{item.TITLE}&lt;/p&gt;
		&lt;p class="votre classe CSS"&gt;{item.DESC}&lt;/p&gt;
		&lt;p class="votre classe CSS"&gt; par : &lt;span&gt;{item.PSEUDO}&lt;/span&gt;&lt;/p&gt;
	&lt;/a&gt;
&lt;/div&gt;
# END item #[/code] Chaque élément récupéré dans la base de donnée sera affiché de la manière précedente.

Finalement, il faut appeler ce second tpl dans le tpl principal [i]home.tpl[/i]

Pour cela, il suffit d'ajouter [code=tpl]# INCLUDE MODULES #[/code] dans le fichier [i]home.tpl[/i] à l'endroit souhaité.



-- Utilisation des flux --

Nous pouvons aussi utiliser simplement les flux disponible par PHPBoost. C'est beaucoup plus rapide en code, mais moins personnalisable.

Pour ce faire, il vous suffit : 
[list=ordered]
	[*]D'ajouter dans le fichier [i]HomeCustomHomePageExtensionPoint.class.php[/i] la fonction suivante : 
(Nous avons pris comme exemple l'ajout du flux des news.
[code=php]private function build_feed_news_view()
{
	$feed_template = new FileTemplate('HomeCustom/feed_news.tpl');
	$this-&gt;template-&gt;put('FEED_NEWS', Feed::get_parsed('news', Feed::DEFAULT_FEED_NAME, 0, $feed_template, 5, 1));
}[/code]
[style=notice]Dans notre exemple, on récupère les 5 dernières news en excluant la dernière [/style]
	[*]D'ajouter une appel à cette fonction dans build_view ou get_view si vous n'avez pas besoin de build_view:
[code=php]$this-&gt;build_feed_news_view();[/code]
	[*]De créer votre fichier [i]feed_news.tpl[/i] :
[code=tpl]# START item #
&lt;!-- ITEM --&gt;
&lt;div class="votre classe CSS"&gt;
	&lt;a href="{item.U_LINK}" class="votre classe CSS"&gt;{item.TITLE}&lt;/a&gt;
	&lt;p class="votre classe CSS"&gt;{item.DATE_TEXT}&lt;/p&gt;
&lt;/div&gt;
&lt;!-- END ITEM --&gt;
# END item #[/code]
	[*]Faire appel au nouveau tpl dans le [i]home.tpl[/i] :
[code=tpl]{FEED_NEWS}[/code]
[/list]</wiki_content>
</wiki_article>